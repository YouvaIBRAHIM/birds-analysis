version: "3.8"

services:
  metastore:
    image: postgres:11
    hostname: metastore
    environment:
      POSTGRES_PASSWORD: jupyter
    ports:
      - "5432:5432"
    volumes:
      - metastore:/var/lib/postgresql/data
      - ./ddl/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.1
    extra_hosts:
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"

  master:
    image: hadoop-hive-spark-master
    hostname: master
    depends_on:
      - metastore
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.2
      SPARK_LOCAL_HOSTNAME: master
    ports:
      - "4040:4040"
      - "8020:8020"
      - "8080:8080"
      - "8088:8088"
      - "9870:9870"
      - "50070:50070"
      - "10000:10000"
    volumes:
      - namenode:/opt/hadoop/dfs/name
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.2
    extra_hosts:
      - "metastore:172.28.1.1"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"
      - "secondary:172.28.1.6"

  secondary:
    image: hadoop-hive-spark-master
    hostname: secondary
    depends_on:
      - master
    environment:
      HDFS_NAMENODE_SECONDARY: 172.28.1.6
    ports:
      - "9868:9868"
    volumes:
      - namesecondary:/opt/hadoop/dfs/secondary
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.6
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"

  worker1:
    image: hadoop-hive-spark-worker
    hostname: worker1
    depends_on:
      - master
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.3
      SPARK_LOCAL_HOSTNAME: worker1
    ports:
      - "8042:8042"
      - "8081:8081"
      - "9864:9864"
    volumes:
      - datanode1:/opt/hadoop/dfs/data
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.3
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"

  worker2:
    image: hadoop-hive-spark-worker
    hostname: worker2
    depends_on:
      - master
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.4
      SPARK_LOCAL_HOSTNAME: worker2
    ports:
      - "8043:8042"
      - "8082:8081"
      - "9865:9864"
    volumes:
      - datanode2:/opt/hadoop/dfs/data
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.4
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "history:172.28.1.5"

  history:
    image: hadoop-hive-spark-history
    hostname: history
    depends_on:
      - master
      - worker1
      - worker2
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.5
      SPARK_LOCAL_HOSTNAME: history
    ports:
      - "18080:18080"
      - "19888:19888"
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.5
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.1
    deploy:
      resources:
        limits:
          memory: 8g
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      sparknet:
        ipv4_address: 172.28.1.7

  jupyter:
    image: hadoop-hive-spark-jupyter
    hostname: jupyter
    environment:
      SPARK_MASTER_HOST: 172.28.1.2
      SPARK_LOCAL_IP: 172.28.1.8
      SPARK_LOCAL_HOSTNAME: jupyter
    depends_on:
      - master
      - worker1
      - worker2
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter/notebook:/home/jupyter/notebook
    restart: always
    networks:
      sparknet:
        ipv4_address: 172.28.1.8
    extra_hosts:
      - "metastore:172.28.1.1"
      - "master:172.28.1.2"
      - "worker1:172.28.1.3"
      - "worker2:172.28.1.4"
      - "history:172.28.1.5"

  web:
    container_name: my-backend
    build: .
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - JWT_SECRET=${JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./back/:/app
    depends_on:
      - db
    networks:
      - sparknet

  # adminer:
  #   container_name: my-adminer
  #   image: adminer
  #   ports:
  #     - 8089:8080
  #   environment:
  #     ADMINER_DEFAULT_SERVER: db
  #   depends_on:
  #     - db
  #   networks:
  #     - sparknet

  db:
    container_name: my-db
    image: postgres:14
    ports:
      - "5433:5433" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_GPORT: 5433
      PGPORT: 5433
    networks:
      - sparknet


volumes:
  namenode:
  namesecondary:
  datanode1:
  datanode2:
  metastore:
  postgres_data:

networks:
  sparknet:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
